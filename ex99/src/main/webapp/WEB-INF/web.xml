<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://xmlns.jcp.org/xml/ns/javaee"
		 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-aapp_3_1.xsd"
		 id="WebApp_Id" version="3.1">


	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml
		/WEB-INF/spring/security-context.xml
		</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		
		<!-- 404 Error처리 servlet-context에서 지정한 controller에서 처리함 -->
		<init-param>
	        <param-name>throwExceptionIfNoHandlerFound</param-name>
	        <param-value>true</param-value>
	    </init-param>
		
		<load-on-startup>1</load-on-startup>
		
		<!-- ========================================================== -->
		<!-- web.xml 설정은 WAS 자체의 설정일 뿐이고 스프링에서 업로드 처리는 		-->
		<!-- MultipartResolver라는 타입의 객체를 빈으로 틍록해야한다.             -->
		<!-- 이 bean 등록은 root-context가 아닌 servlet-context에 등록해야함.   -->
		<!-- ========================================================== -->
		<multipart-config>
			<location>C:\\upload\\temp</location>				<!-- 저장될 경로 -->
			<max-file-size>20971520</max-file-size> 			<!-- 1MB * 20 [업로드되는 파일의 저장할 공간과 업로드되는 파일의 최대 크기]-->
        	<max-request-size>41943040</max-request-size> 		<!-- 40MB [한번에 올릴 수 있는 최대 크기]-->
        	<file-size-threshold>20971520</file-size-threshold> <!-- 20MB [특정 사이즈의 메모리사용량]-->
		</multipart-config>
		
	</servlet>
	
	
	<!-- ================================================== -->
	<!-- spring security가 스프링 MVC에서 사용되기 위해서 필터를 이용   -->		
	<!-- 하여 스프링 동작에 관여하도록 설정                          -->		
	<!-- ************************************************** -->		
	<!-- filter와 mapping만으로는  springSecurityFilterChain  -->		
	<!-- 빈이 제대로 설정되지 않아서 에러가 발생함 ( 스프링  시큐리티 설정 파일을  -->		
	<!-- 찾을 수 없기 때문임 ) 따라서 security-context.xml을 읽을 수 -->		
	<!-- 있도록 추가 설정을 해줘야함. -->		
	<!-- ================================================== -->
	<filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
    </filter>

	<filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
		
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
